Assignment: Wizard, Ninja, Samurai
We will be creating three different classes that all inherit from the Human class we created.

human.rb
class Human
  attr_accessor :strength, :intelligence, :health, :stealth
  def initialize
    @strength = 3
    @intelligence = 3
    @stealth = 3
    @health = 100
  end
  def attack(obj)
    # check if the attacked object's class is Human or inherits from the Human class
    if obj.class.ancestors.include?(Human)
      obj.health -= 10
      # remember that we don't need to write "return" in ruby
      # stating true below will automatically return the boolean true
      true
    else
      false
    end
  end
end
Create a Wizard class that inherits from the Human class.

wizard.rb
class Wizard
  # your code here
end
Next, let's create a Ninja class.

ninja.rb
class Ninja
  # your code here
end
Now, let's create the Samurai class

samurai.rb
class Samurai 
  # your code here
end
 Wizard should have a default health of 50 and intelligence of 25
 Wizard should have a method called heal, which when invoked, heals the Wizard by 10
 Wizard should have a method called fireball, which when invoked, decrease the health of whichever object it attacked by 20
 Ninja should have a default stealth of 175
 Ninja should have a steal method which, when invoked, attacks an object and increases the Ninjas health by 10
 Ninja should have a get_away method which, when invoked, decreases its health by 15
 Samurai should have a default health of 200
 Samurai should have method called death_blow, which when invoked, attacks an object and decreases its health to 0
 Samurai should have a method called meditate, which when invoked, heals the Samurai back to full health
 Samurai should have a class method called how_many, which when invoked, displays how many Samurai's there are
